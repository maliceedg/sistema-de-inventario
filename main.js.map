{"version":3,"sources":["./src/app/table/table.component.ts","./src/app/table/table.component.html","./src/environments/environment.ts","./src/app/services/product.service.ts","./src/app/product/product.component.ts","./src/app/product/product.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/menu/menu.component.ts","./src/app/menu/menu.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AuthService } from '@auth0/auth0-angular';\nimport { ProductService } from \"../services/product.service\";\n\nexport interface UserData {\n  id: string;\n  name: string;\n  progress: string;\n  color: string;\n}\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.css']\n})\nexport class TableComponent implements AfterViewInit, OnInit {\n\n  displayedColumns: string[] = ['id', 'name', 'number', 'date', 'category', 'price', 'delete'];\n  dataSource: MatTableDataSource<UserData>;\n\n  products = [];\n  isLoading = true;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(\n    public auth: AuthService,\n    private productService: ProductService,\n    private _snackBar: MatSnackBar) {\n    // Assign the data to the data source for the table to render\n    this.dataSource = new MatTableDataSource([]);\n  }\n\n  ngOnInit() {\n    this.refreshData();\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  refreshData() {\n    this.isLoading = true;\n    this.productService.getProducts().subscribe((products) => {\n      this.dataSource.data = products as any;\n      this.isLoading = false;\n    },\n      error => this.isLoading = false\n    );\n  }\n\n  deleteProduct(id) {\n    this.productService.deleteProduct(id).subscribe((response) => {\n      this.openSnackBar('El producto se ha eliminado con éxito', 'Cerrar');\n      this.refreshData();\n    });\n  }\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {\n      duration: 2500,\n      horizontalPosition: 'start',\n      verticalPosition: 'bottom',\n    });\n  }\n}\n","<app-menu></app-menu>\n\n<div class=\"table-container\">\n    <mat-form-field>\n        <mat-label>Filter</mat-label>\n        <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n    </mat-form-field>\n\n    <div class=\"mat-elevation-z8\" style=\"width: 90%; margin: auto;\">\n        <table mat-table [dataSource]=\"dataSource\" matSort>\n\n            <ng-container matColumnDef=\"id\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.id}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"name\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Nombre </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"number\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Cantidad </th>\n                <td mat-cell [ngClass]=\"{'danger': row.number < 5, 'warning': row.number < 11}\" *matCellDef=\"let row\"> {{row.number}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"date\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Fecha </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.date}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"category\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Categoría </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.category}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"price\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Precio </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.price}}$ </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"delete\">\n                <th mat-header-cell *matHeaderCellDef></th>\n                <td mat-cell *matCellDef=\"let row\">\n                    <button mat-icon-button aria-label=\"Delete\" color=\"primary\" (click)=\"deleteProduct(row.id)\">\n                        <mat-icon>delete</mat-icon>\n                    </button>\n                </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n            <tr class=\"mat-row\" *matNoDataRow>\n                <td class=\"mat-cell\" colspan=\"4\">No hay data que se asemeje a \"{{input.value}}\"</td>\n            </tr>\n        </table>\n\n        <div *ngIf=\"isLoading\" style=\"display: flex; justify-content: center; align-items: center; background: white;\">\n            <mat-progress-spinner color=\"primary\" mode=\"indeterminate\">\n            </mat-progress-spinner>\n        </div>\n\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n    </div>\n\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  constructor(private http: HttpClient) { }\n\n  getProducts() {\n    const url = 'http://localhost:8000/products/';\n    return this.http.get(url);\n  }\n\n  createProduct(product) {\n    const url = 'http://localhost:8000/products/';\n    return this.http.post(url, product);\n  }\n\n  deleteProduct(id) {\n    const url = `http://localhost:8000/products/${id}`;\n    return this.http.delete(url, id);\n  }\n}\n\nexport interface Config {\n  heroesUrl: string;\n  textfile: string;\n  date: any;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ProductService } from '../services/product.service';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})\nexport class ProductComponent implements OnInit {\n\n  categories = [\n    { id: 1, name: 'Arrocera' },\n    { id: 2, name: 'Cafetera' },\n    { id: 3, name: 'Corneta/Altavoz' },\n    { id: 4, name: 'Freidora' },\n    { id: 5, name: 'Plancha' },\n    { id: 6, name: 'Sartén Eléctrico' },\n    { id: 7, name: 'Televisor' },\n    { id: 8, name: 'Ventilador' },\n    { id: 9, name: 'Wafflera' }\n  ]\n\n  productForm: FormGroup;\n  numberValidation = /\\-?\\d*\\.?\\d{1,2}/;\n\n\n  getErrorMessage(fieldName) {\n    const formType = this.productForm.get(fieldName);\n\n    if (formType.hasError('required')) {\n      return 'Debes ingresar un valor';\n    }\n\n    if (formType.hasError('number')) {\n      return 'No es un número válido';\n    }\n\n    if (formType.hasError('min')) {\n      return `Número no puede ser menor a ${formType.errors.min.min}`;\n    }\n\n    if (formType.hasError('max')) {\n      return `Número no puede ser mayor a ${formType.errors.max.max}`;\n    }\n\n    if (formType.hasError('price')) {\n      return 'No es un precio válido';\n    }\n  }\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private productService: ProductService,\n    private _snackBar: MatSnackBar) {\n\n  }\n\n  ngOnInit() {\n    this.createProductForm();\n  }\n\n  createProductForm() {\n    this.productForm = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      number: new FormControl('', [Validators.required, Validators.min(1), Validators.max(999), Validators.pattern(this.numberValidation)]),\n      date: new FormControl((new Date()).toISOString().substring(0, 10)),\n      category: new FormControl('', [Validators.required]),\n      price: new FormControl('', [Validators.required, Validators.min(1), Validators.max(9999999999), Validators.pattern(this.numberValidation)])\n    });\n  }\n\n  sendProduct() {\n    this.productService.createProduct(this.productForm.value).subscribe((response) => {\n      this.openSnackBar('El producto se ha creado con éxito', 'Cerrar');\n      console.log(response);\n    });\n  }\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {\n      duration: 2500,\n      horizontalPosition: 'start',\n      verticalPosition: 'bottom',\n    });\n  }\n\n}\n","<app-menu></app-menu>\n\n<div class=\"product-container\">\n\n    <h2>Agregar Producto</h2>\n    <div class=\"form-container\">\n        <div class=\"form-center\" [class.mat-elevation-z2]=\"true\">\n            <form *ngIf=\"productForm\" [formGroup]=\"productForm\" (ngSubmit)=\"sendProduct()\">\n                <div class=\"field-group\">\n                    <div class=\"form-field\">\n                        <mat-form-field appearance=\"standard\">\n                            <mat-label>Nombre del producto</mat-label>\n                            <input matInput placeholder=\"TELEVISOR LG 88128\" formControlName=\"name\" required>\n                            <mat-error *ngIf=\"productForm.controls['name'].invalid\">{{getErrorMessage('name')}}</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"form-field\">\n                        <mat-form-field appearance=\"standard\">\n                            <mat-label>Cantidad del producto</mat-label>\n                            <input matInput placeholder=\"1, 3, 17...\" type=\"number\" formControlName=\"number\" required maxlength=\"999\">\n                            <mat-error *ngIf=\"productForm.controls['number'].invalid\">{{getErrorMessage('number')}}</mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n\n                <div class=\"field-group\">\n                    <div class=\"form-field\">\n                        <mat-form-field appearance=\"standard\">\n                            <mat-label>Fecha actual</mat-label>\n                            <input matInput type=\"date\" formControlName=\"date\" readonly>\n                            <mat-error *ngIf=\"productForm.controls['date'].invalid\">{{getErrorMessage('date')}}</mat-error>\n                        </mat-form-field>\n                    </div>\n\n                    <div class=\"form-field\">\n                        <mat-form-field appearance=\"standard\">\n                            <mat-label>Categoría</mat-label>\n                            <mat-select formControlName=\"category\" required>\n                                <mat-option *ngFor=\"let category of categories\" value=\"{{category.name}}\">{{category.name}}</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                </div>\n\n                <div class=\"field-group\">\n                    <div class=\"form-field\" style=\"width: 100%;\">\n                        <mat-form-field appearance=\"standard\" style=\"width: 100%;\">\n                            <mat-label>Precio</mat-label>\n                            <input matInput type=\"number\" formControlName=\"price\">\n                            <mat-error *ngIf=\"productForm.controls['price'].invalid\">{{getErrorMessage('price')}}</mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n\n                <div class=\"button-container\">\n                    <button mat-raised-button color=\"primary\" [disabled]=\"!productForm.valid\" type=\"submit\" class=\"send-button\" aria-label=\"send\">\n                        <span>Enviar</span>\n                    </button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\nimport { PageEvent } from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'sistema-de-inventario';\n\n  // MatPaginator Inputs\n  length = 100;\n  pageSize = 10;\n  pageSizeOptions: number[] = [5, 10, 25, 100];\n\n  // MatPaginator Output\n  pageEvent: PageEvent;\n\n  setPageSizeOptions(setPageSizeOptionsInput: string) {\n    if (setPageSizeOptionsInput) {\n      this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\n    }\n  }\n}\n","<div class=\"component-container\">\n    <router-outlet></router-outlet>\n</div>","import { DOCUMENT } from '@angular/common';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { AuthService } from '@auth0/auth0-angular';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor(@Inject(DOCUMENT) private doc: Document, public auth: AuthService) { }\n\n  items = [\n    {\n      text: \" Ver Productos\",\n      icon: \"person\",\n      route: \"/table\"\n    },\n    {\n      text: \"  Agregar Producto\",\n      icon: \"add_box\",\n      route: \"/product\"\n    }\n  ]\n\n  ngOnInit(): void {\n  }\n\n  logout(): void {\n    // Call this to redirect the user to the login page\n    this.auth.logout({ returnTo: `${this.doc.location.origin}/login` });\n  }\n\n}\n","<mat-toolbar class=\"menu\" color=\"primary\">\n\n    <img class=\"logo\" src=\"../../assets/images/logo-example.png\" alt=\"Example logo\">\n    <span>Sistema de Inventario</span>\n    <span class=\"spacer\"></span>\n\n    <div class=\"menu-navigation\">\n        <button *ngFor=\"let item of items\" class=\"menu-button margin\" mat-button routerLink=\"{{item.route}}\" routerLinkActive=\"active\">\n          <mat-icon>{{item.icon}}</mat-icon>{{item.text}}\n        </button>\n\n        <button mat-raised-button color=\"basic\" (click)=\"logout()\" aria-label=\"Menu logout\">\n            <span style=\"font-size: 18;\">Salir</span>\n            <mat-icon>person</mat-icon> \n        </button>\n    </div>\n\n    <div class=\"mobile-navigation\">\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Mobile menu\">\n            <mat-icon>more_vert</mat-icon>\n        </button>\n        <mat-menu #menu=\"matMenu\" style=\"padding: 0;\">\n            <div class=\"mobile-items\" style=\"padding: 0 10px;\">\n                <ng-container *ngFor=\"let item of items\">\n                    <button class=\"menu-button\" mat-button routerLink=\"{{item.route}}\" routerLinkActive=\"active\">\n                        <mat-icon>{{item.icon}}</mat-icon>{{item.text}}\n                      </button>\n                    <mat-divider></mat-divider>\n                </ng-container>\n\n                <button class=\"menu-button\" mat-button color=\"basic\" (click)=\"logout()\" aria-label=\"Menu logout\">\n                      <mat-icon>person</mat-icon> Salir\n                </button>\n                <mat-divider></mat-divider>\n            </div>\n        </mat-menu>\n    </div>\n</mat-toolbar>\n\n\n<!-- Hero -->\n<div class=\"pattern-bg\"></div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\n// Components\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from \"./login/login.component\";\nimport { MenuComponent } from './menu/menu.component';\nimport { TableComponent } from './table/table.component';\nimport { ProductComponent } from './product/product.component';\n\n// Services\nimport { ProductService } from \"./services/product.service\";\n\n// Angular Imports\nimport { AppRoutingModule } from './app-routing.module';\nimport { AuthModule } from '@auth0/auth0-angular';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n// Material\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TableComponent,\n    ProductComponent,\n    LoginComponent,\n    MenuComponent,\n  ],\n  imports: [\n    // Angular Imports\n    AppRoutingModule,\n    AuthModule.forRoot({\n      domain: 'dev-uuv-0nd3.us.auth0.com',\n      clientId: 'YgpCSS3ve0myTLgcULShugLNks59Iroa'\n    }),\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    // Material\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatDividerModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatMenuModule,\n    MatPaginatorModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n  ],\n  providers: [ProductService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from '@auth0/auth0-angular';\n\n// Components\nimport { LoginComponent } from \"./login/login.component\";\nimport { TableComponent } from \"./table/table.component\";\nimport { ProductComponent } from \"./product/product.component\";\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/table', pathMatch: 'full'},\n  { path: 'login', component: LoginComponent },\n  { path: 'table', component: TableComponent, canActivate: [AuthGuard] },\n  { path: 'product', component: ProductComponent, canActivate: [AuthGuard] },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { AuthService } from '@auth0/auth0-angular';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n\n  email = new FormControl('', [Validators.required, Validators.email]);\n\n  hide = true;\n\n  getErrorMessage() {\n    if (this.email.hasError('required')) {\n      return 'El campo no puede estar vacio';\n    }\n\n    return this.email.hasError('email') ? 'No es un correo válido' : '';\n  }\n\n  constructor(\n    private formBuilder: FormBuilder,\n    public auth: AuthService,\n    @Inject(DOCUMENT) private doc: Document,\n  ) { }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({      \n      username: ['', Validators.required],\n      password: ['', [Validators.required]]\n    });\n  }\n\n  get f() { return this.loginForm.controls; }\n\n  login(): void {\n    // Call this to redirect the user to the login page\n    this.auth.loginWithRedirect({redirect_uri: `${this.doc.location.origin}/table`});\n  }\n}\n","<div class=\"container\">\n    <div class=\"overlay\"></div>\n\n    <div class=\"login\">\n        <div class=\"form-container\">\n            <h2 style=\"margin: 15px;\">Bienvenido a la plataforma</h2>\n\n            <div class=\"button-align\">\n                <button class=\"button\" (click)=\"login()\" mat-raised-button color=\"primary\">Ingresar</button>\n            </div>\n\n        </div>\n    </div>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}